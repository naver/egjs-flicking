{"version":3,"file":"all.min.js","sources":["../src/index.ts","../src/Parallax.ts","../src/Fade.ts"],"sourcesContent":["import Parallax from \"./Parallax\";\nimport Fade from \"./Fade\";\n\nexport default {\n  Parallax,\n  Fade,\n};\n","import Flicking, { FlickingEvent, Plugin } from \"@egjs/flicking\";\n\nexport default class Parallax implements Plugin {\n  constructor(private selector, private scale = 1) {}\n  public init(flicking: Flicking): void {\n    flicking.on(\"move\", this.onMove);\n  }\n  public destory(flicking: Flicking): void {\n    flicking.off(\"move\", this.onMove);\n  }\n  private onMove = (e: FlickingEvent) => {\n    const flicking = e.currentTarget;\n    const panels = flicking.getVisiblePanels();\n\n    panels.forEach(panel => {\n      const progress = panel.outsetProgress;\n\n      panel.update(el => {\n        const target = el.querySelector<HTMLElement>(this.selector)!;\n        const parentTarget = target.parentNode as Element;\n        const rect = target.getBoundingClientRect();\n        const parentRect = parentTarget.getBoundingClientRect();\n        const position = (rect.width - parentRect.width) / 2 * progress * this.scale;\n\n        target.style.transform = `translate(-50%) translate(${position}px)`;\n      });\n    });\n  }\n}\n","import Flicking, { FlickingEvent, Plugin } from \"@egjs/flicking\";\n\nexport default class Fade implements Plugin {\n  constructor(private selector, private scale = 1) {}\n  public init(flicking: Flicking): void {\n    flicking.on(\"move\", this.onMove);\n  }\n  public destory(flicking: Flicking): void {\n    flicking.off(\"move\", this.onMove);\n  }\n  private onMove = (e: FlickingEvent) => {\n    const flicking = e.currentTarget;\n    const panels = flicking.getVisiblePanels();\n    const selector = this.selector;\n    const scale = this.scale;\n\n    panels.forEach(panel => {\n      const progress = panel.outsetProgress;\n\n      panel.update(el => {\n        const target = selector ? el.querySelector<HTMLElement>(selector)! : el;\n        const opacity = Math.min(1, Math.max(0, (1 - Math.abs(progress * scale))));\n\n        target.style.opacity = `${opacity}`;\n      });\n    });\n  }\n}\n"],"names":["Parallax","selector","scale","e","currentTarget","getVisiblePanels","forEach","panel","progress","outsetProgress","update","el","target","querySelector","_this","parentTarget","parentNode","rect","getBoundingClientRect","parentRect","position","width","style","transform","flicking","on","this","onMove","off","Fade","panels","opacity","Math","min","max","abs"],"mappings":";;;;;;;;+PAGe,CACbA,+BCDoBC,EAAkBC,gBAAAA,8BAAlBD,aAAkBC,cAOrB,SAACC,GACCA,EAAEC,cACKC,mBAEjBC,QAAQ,SAAAC,OACPC,EAAWD,EAAME,eAEvBF,EAAMG,OAAO,SAAAC,OACLC,EAASD,EAAGE,cAA2BC,EAAKb,UAC5Cc,EAAeH,EAAOI,WACtBC,EAAOL,EAAOM,wBACdC,EAAaJ,EAAaG,wBAC1BE,GAAYH,EAAKI,MAAQF,EAAWE,OAAS,EAAIb,EAAWM,EAAKZ,MAEvEU,EAAOU,MAAMC,UAAY,6BAA6BH,6CApB5D,SAAYI,GACVA,EAASC,GAAG,OAAQC,KAAKC,mBAE3B,SAAeH,GACbA,EAASI,IAAI,OAAQF,KAAKC,cDH5BE,2BEFoB5B,EAAkBC,gBAAAA,8BAAlBD,aAAkBC,cAOrB,SAACC,OAEV2B,EADW3B,EAAEC,cACKC,mBAClBJ,EAAWa,EAAKb,SAChBC,EAAQY,EAAKZ,MAEnB4B,EAAOxB,QAAQ,SAAAC,OACPC,EAAWD,EAAME,eAEvBF,EAAMG,OAAO,SAAAC,OACLC,EAASX,EAAWU,EAAGE,cAA2BZ,GAAaU,EAC/DoB,EAAUC,KAAKC,IAAI,EAAGD,KAAKE,IAAI,EAAI,EAAIF,KAAKG,IAAI3B,EAAWN,KAEjEU,EAAOU,MAAMS,QAAU,GAAGA,uCAnBhC,SAAYP,GACVA,EAASC,GAAG,OAAQC,KAAKC,mBAE3B,SAAeH,GACbA,EAASI,IAAI,OAAQF,KAAKC"}