"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[33678],{15680:(e,t,n)=>{n.d(t,{xA:()=>p,yg:()=>d});var r=n(96540);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var c=r.createContext({}),s=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},p=function(e){var t=s(e.components);return r.createElement(c.Provider,{value:t},e.children)},g="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},y=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,a=e.originalType,c=e.parentName,p=o(e,["components","mdxType","originalType","parentName"]),g=s(n),y=i,d=g["".concat(c,".").concat(y)]||g[y]||u[y]||a;return n?r.createElement(d,l(l({ref:t},p),{},{components:n})):r.createElement(d,l({ref:t},p))}));function d(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var a=n.length,l=new Array(a);l[0]=y;var o={};for(var c in t)hasOwnProperty.call(t,c)&&(o[c]=t[c]);o.originalType=e,o[g]="string"==typeof e?e:i,l[1]=o;for(var s=2;s<a;s++)l[s]=n[s];return r.createElement.apply(null,l)}return r.createElement.apply(null,n)}y.displayName="MDXCreateElement"},25511:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>l,default:()=>u,frontMatter:()=>a,metadata:()=>o,toc:()=>s});var r=n(58168),i=(n(96540),n(15680));const a={custom_edit_url:null},l=void 0,o={unversionedId:"api/FlickingReactiveAPIOptions",id:"api/FlickingReactiveAPIOptions",title:"FlickingReactiveAPIOptions",description:"Options for Flicking reactive API that help optimize initial rendering in SSR scenariosThese options allow you to set initial state values before the Flicking instance is fully initialized,preventing unnecessary re-renders when the actual Flicking state is applied.",source:"@site/docs/api/FlickingReactiveAPIOptions.mdx",sourceDirName:"api",slug:"/api/FlickingReactiveAPIOptions",permalink:"/egjs-flicking/docs/next/api/FlickingReactiveAPIOptions",draft:!1,editUrl:null,tags:[],version:"current",frontMatter:{custom_edit_url:null},sidebar:"api",previous:{title:"FlickingReactiveData",permalink:"/egjs-flicking/docs/next/api/FlickingReactiveData"},next:{title:"ElementLike",permalink:"/egjs-flicking/docs/next/api/ElementLike"}},c={},s=[],p={toc:s},g="wrapper";function u(e){let{components:t,...n}=e;return(0,i.yg)(g,(0,r.A)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,i.yg)("div",null),(0,i.yg)("p",null,"Options for Flicking reactive API that help optimize initial rendering in SSR scenarios",(0,i.yg)("br",null),"These options allow you to set initial state values before the Flicking instance is fully initialized,",(0,i.yg)("br",null),"preventing unnecessary re-renders when the actual Flicking state is applied."),(0,i.yg)("p",null,(0,i.yg)("strong",{parentName:"p"},"Type"),": TSInterface"),(0,i.yg)("table",null,(0,i.yg)("thead",{parentName:"table"},(0,i.yg)("tr",{parentName:"thead"},(0,i.yg)("th",{parentName:"tr",align:"center"},"PROPERTY"),(0,i.yg)("th",{parentName:"tr",align:"center"},"TYPE"),(0,i.yg)("th",{parentName:"tr",align:"center"},"DEFAULT"),(0,i.yg)("th",{parentName:"tr",align:"center"},"DESCRIPTION"))),(0,i.yg)("tbody",{parentName:"table"},(0,i.yg)("tr",{parentName:"tbody"},(0,i.yg)("td",{parentName:"tr",align:"center"},"defaultIndex"),(0,i.yg)("td",{parentName:"tr",align:"center"},"number"),(0,i.yg)("td",{parentName:"tr",align:"center"},"0"),(0,i.yg)("td",{parentName:"tr",align:"center"},"Initial panel index to start with. This sets the currentPanelIndex and indexProgress initial values.",(0,i.yg)("br",null),"Also affects isReachStart and isReachEnd initial value setting.",(0,i.yg)("br",null))),(0,i.yg)("tr",{parentName:"tbody"},(0,i.yg)("td",{parentName:"tr",align:"center"},"totalPanelCount"),(0,i.yg)("td",{parentName:"tr",align:"center"},"number"),(0,i.yg)("td",{parentName:"tr",align:"center"},"0"),(0,i.yg)("td",{parentName:"tr",align:"center"},"Total number of panels in the Flicking instance. This sets the totalPanelCount initial value",(0,i.yg)("br",null),"and helps prevent layout shifts during SSR hydration.",(0,i.yg)("br",null))))),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-js"},"const options = {\n  defaultIndex: 2,\n  totalPanelCount: 5\n};\nconst reactiveObj = connectFlickingReactiveAPI(flicking, options);\n")))}u.isMDXComponent=!0}}]);